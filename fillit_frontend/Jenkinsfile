pipeline {
    agent any
    environment {
        GIT_BRANCH = 'dev_front'
        GITLAB_REPO_URL = 'https://lab.ssafy.com/s12-webmobile2-sub1/S12P11A406.git'
        DOCKER_IMAGE_NAME = 'fillit-front'
        DOCKER_CONTAINER_NAME = 'fillit-front-container'
        DOCKER_PORT = '3000'
        VITE_API_BASE_URL = "${env.VITE_API_BASE_URL}"
        // HOME을 WORKSPACE로 설정하여 npm 캐시 권한 문제 회피
        HOME = "${env.WORKSPACE}"
    }
    stages {
        stage('Checkout & Build') {
            // Node.js와 npm이 모두 포함된 이미지 사용 (예: node:22-buster)
            agent {
                docker {
                    image 'node:22-buster'
                    // 필요하다면, 사용자 권한 관련 옵션을 추가할 수 있음
                    // 예: args '-u root:root'
                }
            }
            steps {
                // Git 체크아웃
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: "*/${GIT_BRANCH}"]],
                    doGenerateSubmoduleConfigurations: false,
                    userRemoteConfigs: [[
                        url: "${GITLAB_REPO_URL}",
                        credentialsId: 'gitlab-credentials-id'
                    ]]
                ])
                
                // npm 설치 및 빌드 단계
                dir('fillit_frontend') {
                    // 먼저 npm이 제대로 설치되어 있는지 확인
                    sh 'which npm'
                    sh 'npm -v'
                    
                    sh '''
                        npm install
                        VITE_API_BASE_URL=''' + "${VITE_API_BASE_URL}" + ''' npm run build
                    '''
                }
            }
        }
        stage('Build Docker Image') {
            // Docker CLI가 포함된 이미지를 사용하여 Docker 명령어 실행
            agent {
                docker {
                    image 'docker:20.10'
                    args '-v /var/run/docker.sock:/var/run/docker.sock'
                }
            }
            steps {
                // Dockerfile은 fillit_frontend 폴더 내에 있다고 가정
                dir('fillit_frontend') {
                    sh '''
                        docker build -t ''' + "${DOCKER_IMAGE_NAME}:latest" + ''' \
                                     -t ''' + "${DOCKER_IMAGE_NAME}:${BUILD_NUMBER}" + ''' \
                                     -f Dockerfile .
                    '''
                }
            }
        }
        stage('Deploy') {
            agent {
                docker {
                    image 'docker:20.10'
                    args '-v /var/run/docker.sock:/var/run/docker.sock'
                }
            }
            steps {
                script {
                    sh '''
                        docker stop ''' + "${DOCKER_CONTAINER_NAME}" + ''' || true
                        docker rm ''' + "${DOCKER_CONTAINER_NAME}" + ''' || true
                        docker run -d -p ''' + "${DOCKER_PORT}:80" + ''' --name ''' + "${DOCKER_CONTAINER_NAME}" + ''' \
                            -e VITE_API_BASE_URL=''' + "${VITE_API_BASE_URL}" + ''' \
                            ''' + "${DOCKER_IMAGE_NAME}:latest"
                    '''
                }
            }
        }
    }
}
